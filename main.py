import telebot
from telebot import types

import config
import questions
import answers

bot = telebot.TeleBot('7721365693:AAEUpOEvYHSWDCgrZl7WIc__ocrstGpMDsg')

#MyUserName = ''

#–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –Ω–µ–ª–µ–ø—ã—Ö –æ—à–∏–±–æ–∫(–ö–æ—Å—Ç—ã–ª—å –ø–æ —Å–≤–æ–µ–π —Å—É—Ç–∏)
messages = [
    'ü§ü –Ø –µ—â—ë —à–∫–æ–ª—å–Ω–∏–∫!', '–î–∞–ª–µ–µ...','üéì –Ø —É–∂–µ —Å—Ç—É–¥–µ–Ω—Ç!',
    "–ö –≤–æ–ø—Ä–æ—Å–∞–º...", "ü§ü –ü–æ–≥–Ω–∞–ª–∏!", '/start',
    '/help', '/changename', '/changeeducation'
    ]

listOfNumbers = '12345678910'


#–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@bot.message_handler(commands=['start'])
def start(message):
    a = bot.send_message(message.chat.id, 'üëã –ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞–∫—Å, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –ê–≤–∏—Å–º–æ–π! –î–ª—è –Ω–∞—á–∞–ª–∞, –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?')
    bot.send_photo(message.chat.id,'https://i.postimg.cc/1XbZsy7D/AVISMABOT335.png')
    bot.register_next_step_handler(a, FirstInfo)

"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è üëã")
    markup.add(btn1)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫!", reply_markup=markup)
"""
"""
@bot.message_handler(commands=['help'])
def changeInfo(message):
    bot.send_message(message.chat.id, 'üòû –†–∞–∑ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª —ç—Ç–æ, –∑–Ω–∞—á–∏—Ç —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å. –í–æ—Ç —á—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å: \n ‚Ä¢ /start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É\n ‚Ä¢ /changeeducation - –ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ')
    
@bot.message_handler(commands=['changename'])
def changeEdu(message):
    bot.send_message(message.chat.id, '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞')
 
@bot.message_handler(content_types=['text'])
def FirstPart(message):
"""    

#–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤–ø–ª–æ—Ç—å –¥–æ –≤–æ–ø—Ä–æ—Å–æ–≤
@bot.message_handler(content_types=['text'])
def FirstInfo(message):
    #global IsName

    if message.text not in messages and message.text not in listOfNumbers:
        
        config.UnqueUsername = message
    
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–î–∞–ª–µ–µ...")
        markup.add(btn1)
        bot.send_message(message.chat.id, f'üòä –†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É, {message.text}!', reply_markup=markup)
   
    elif (message.text == '–î–∞–ª–µ–µ...'):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        
        btn1 = types.KeyboardButton("ü§ü –Ø –µ—â—ë —à–∫–æ–ª—å–Ω–∏–∫!")
        btn2 = types.KeyboardButton("üéì –Ø —É–∂–µ —Å—Ç—É–¥–µ–Ω—Ç!")
        
        markup.add(btn2)
        markup.add(btn1)
        
        bot.send_message(message.chat.id, f'ü§î {config.UnqueUsername.text}, —Ç—ã –µ—â—ë —É—á–∏—à—å—Å—è –≤ —à–∫–æ–ª–µ, –∏–ª–∏ —É–∂–µ —É—Å–ø–µ–ª —Å—Ç–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–º?',reply_markup=markup)
    
    elif message.text == 'ü§ü –Ø –µ—â—ë —à–∫–æ–ª—å–Ω–∏–∫!':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("ü§ü –ü–æ–≥–Ω–∞–ª–∏!")
        
        markup.add(btn1)
        
        bot.send_message(message.chat.id, 'üëç –≠—Ç–æ –∫—Ä—É—Ç–æ! –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è —è –ø–æ–¥–æ–±—Ä–∞–ª –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –≤–æ–ø—Ä–æ—Å—ã!', reply_markup=markup)
        bot.send_message(message.chat.id, 'üëå –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å–∞ –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –≤—Å—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!')
        config.Education = 'School'

    elif message.text == 'üéì –Ø —É–∂–µ —Å—Ç—É–¥–µ–Ω—Ç!':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("ü§ü –ü–æ–≥–Ω–∞–ª–∏!")
        
        markup.add(btn1)
        
        bot.send_message(message.chat.id, 'üëç –≠—Ç–æ –∫—Ä—É—Ç–æ! –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è —è –ø–æ–¥–æ–±—Ä–∞–ª –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤–æ–ø—Ä–æ—Å—ã!', reply_markup=markup)
        bot.send_message(message.chat.id, 'üëå –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å–∞ –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –≤—Å—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!')
        config.Education = 'Student'
    
    elif message.text == "ü§ü –ü–æ–≥–Ω–∞–ª–∏!":
        SecondPart(message)

#–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
def SecondPart(message):
    bot.send_message(message.chat.id, 'ü§ì –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤:')
    QuestionsShow(message)
    a = bot.send_message(message.chat.id, '–ù–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞: ', reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(a, NextPart)
    
#–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
@bot.message_handler(content_types=['text'])
def NextPart(message):
    if (message.text not in messages):
        CheckResult = Check(message.text)
        if (message.text) and CheckResult: # and (isinstance(message.text, str))
            if int(message.text) <= len(answers.Student): 
                MessageNumberArray = int(message.text)-1
                bot.send_message(message.chat.id, 'üòâ –ù–∞—à—ë–ª –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å!')
                #–ö–∞—Ä—Ç–∏–Ω–∫–∞
                if answers.ImageStudents[MessageNumberArray] != None: bot.send_photo(message.chat.id, answers.ImageStudents[MessageNumberArray])
                #–°—Å—ã–ª–∫–∞-–∫–Ω–æ–ø–∫–∞
                if answers.LinksStudents[MessageNumberArray] != None:
                    markup = types.InlineKeyboardMarkup()
                    button1 = types.InlineKeyboardButton(answers.LinksNames[MessageNumberArray], url= answers.LinksStudents[MessageNumberArray])
                    markup.add(button1)
                else: markup = types.ReplyKeyboardRemove()
                #–°–∞–º —Ç–µ–∫—Å—Ç
                a= bot.send_message(message.chat.id, answers.Student[MessageNumberArray], reply_markup=markup)
                #–ü–µ—Ä–µ—Ö–æ–¥
                bot.register_next_step_handler(a, NextPart)
            else:
                markup = types.InlineKeyboardMarkup()
                btn1 = types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤', callback_data='button1')
                btn2 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞–∑–≤–∞–Ω–∏–µ', callback_data='button2')
                markup.add(btn1, btn2)
                a = bot.send_message(message.chat.id, 'üôÉ –ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã —è —Å–º–æ–≥ –¥–∞—Ç—å –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç.',reply_markup=markup)
                bot.register_next_step_handler(a, NextPart)
        else:
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤', callback_data='button1')
            btn2 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', callback_data='button2')
            markup.add(btn1, btn2)
            a = bot.send_message(message.chat.id, 'üòû –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–ø—Ä–æ–±—É–π –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –µ—â—ë —Ä–∞–∑!', reply_markup=markup)
            bot.register_next_step_handler(a, NextPart)    

@bot.callback_query_handler(func=lambda call: call.data == 'button1')
def ShowQuest(call):
    message = call.message
    bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤:')
    QuestionsShow(message)

@bot.callback_query_handler(func=lambda call: call.data == 'button2')
def ChangeEdu(call):
    message = call.message
    match config.Education:
        case 'Student': 
            config.Education = 'School'
            bot.send_message(message.chat.id, '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ —à–∫–æ–ª—å–Ω–æ–µ.\n\n –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤:')
        case 'School': 
            config.Education = 'Student'
            bot.send_message(message.chat.id, '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ —Å—Ç—É–¥–µ–Ω—á–µ—Å—Å–∫–æ–µ.\n\n –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤:')
    QuestionsShow(message)

#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±—É–∫–≤—ã –≤ —á–∏—Å–ª–µ
def Check(text):
    Result = True
    for i in text:
        if i not in listOfNumbers:
            Result = False
            break
        else: Result = True
    return Result

#–û—Ç–æ–±—Ä–∞–¥–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
def QuestionsShow(message):
    questions.FinalMessage = ''
    if config.Education == 'School':
        for i,value in enumerate(questions.School,1):
            questions.FinalMessage += str(i) + " ‚Ä¢ "+ value + '\n'
    elif config.Education == 'Student':
        for i,value in enumerate(questions.Student,1):
            questions.FinalMessage += str(i) + " ‚Ä¢ "+ value + '\n'
    bot.send_message(message.chat.id,  questions.FinalMessage)

""""
@bot.message_handler(content_types=['text'])
def ababababa(message):
    if message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è üëã":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("‚ùì –ß–æ —Ç—ã –º–æ–≥—ë—à—å?")
        markup.add(btn1)
        bot.send_message(message.from_user.id, '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å',reply_markup=markup) 
    elif message.text == '‚ùì –ß–æ —Ç—ã –º–æ–≥—ë—à—å?':
        bot.reply_to(message, '–Ø –ú–û–ì–£ –í–°–Å!!!!!!!!!!!!!!')
"""

bot.polling(none_stop=True, interval=0) 